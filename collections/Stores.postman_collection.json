{
	"info": {
		"_postman_id": "01cadaca-b861-424a-9a61-25a61e1614ac",
		"name": "Stores",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30673921"
	},
	"item": [
		{
			"name": "Add a store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"store_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"curry\",\n    \"city\": \"BOG\",\n    \"address\": \"Perecedero\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Add a store",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"curry\",\n    \"city\": 500,\n    \"address\": \"Perecedero\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "119"
						},
						{
							"key": "ETag",
							"value": "W/\"77-SvREGl/tCTsftA8ks60oVpxIZWU\""
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:00:48 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"curry\",\n    \"city\": \"BOG\",\n    \"address\": \"Perecedero\",\n    \"id\": \"a34ab6cc-1d8b-41cb-b2f8-c69539faeb34\"\n}"
				}
			]
		},
		{
			"name": "Add a store with invalid data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"store\": \"curry\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Add a store with invalid data",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"store\": \"curry\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "225"
						},
						{
							"key": "ETag",
							"value": "W/\"e1-+dmQ0J9ILWfBKiD4MQHSTbfCMxw\""
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:01:23 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": [\n        \"name should not be empty\",\n        \"name must be a string\",\n        \"city should not be empty\",\n        \"city must be a string\",\n        \"address should not be empty\",\n        \"address must be a string\"\n    ],\n    \"error\": \"Bad Request\",\n    \"statusCode\": 400\n}"
				}
			]
		},
		{
			"name": "Get all stores",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of stores > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Get all stores",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "121"
						},
						{
							"key": "ETag",
							"value": "W/\"79-qHUyaBNUL8FwgIJfn4cZKHhCO20\""
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:01:53 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"b68dfb43-99b6-452c-a6b4-618e5f057635\",\n        \"name\": \"curry\",\n        \"city\": \"BOG\",\n        \"address\": \"Perecedero\",\n        \"products\": []\n    }\n]"
				}
			]
		},
		{
			"name": "Get one store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/{{store_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{store_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get one store",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/{{store_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{store_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "119"
						},
						{
							"key": "ETag",
							"value": "W/\"77-LnunlAjKVrMa8ugYw+tiDldIDos\""
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:02:06 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"b68dfb43-99b6-452c-a6b4-618e5f057635\",\n    \"name\": \"curry\",\n    \"city\": \"BOG\",\n    \"address\": \"Perecedero\",\n    \"products\": []\n}"
				}
			]
		},
		{
			"name": "Get an invalid store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The store with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid store",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "74"
						},
						{
							"key": "ETag",
							"value": "W/\"4a-iQTKaPdZ40YdwkVyKYlmEufUk5M\""
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:02:35 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The store with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update a store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"salt\",\n    \"city\": \"MED\",\n    \"address\": \"Perecedero\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores/{{store_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{store_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update a store",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"salt\",\n    \"city\": 500,\n    \"address\": \"Perecedero\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores/{{store_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{store_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "153"
						},
						{
							"key": "ETag",
							"value": "W/\"99-lg9boRbUQFELxUgdN3Pp02w4s2Q\""
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:05:08 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"b68dfb43-99b6-452c-a6b4-618e5f057635\",\n    \"name\": \"salt\",\n    \"city\": \"MED\",\n    \"address\": \"Perecedero\"\n}"
				}
			]
		},
		{
			"name": "Update an invalid store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The store with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"salt\",\n    \"city\": \"HJU\",\n    \"address\": \"Perecedero\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Update an invalid store",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"salt\",\n    \"city\": \"HJU\",\n    \"address\": \"Perecedero\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "74"
						},
						{
							"key": "ETag",
							"value": "W/\"4a-iQTKaPdZ40YdwkVyKYlmEufUk5M\""
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:05:37 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The store with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update store with invalid data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"store\": \"salt\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores/{{store_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{store_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update store with invalid data",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"store\": \"salt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores/{{store_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{store_id}}"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "225"
						},
						{
							"key": "ETag",
							"value": "W/\"e1-+dmQ0J9ILWfBKiD4MQHSTbfCMxw\""
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:06:08 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": [\n        \"name should not be empty\",\n        \"name must be a string\",\n        \"city should not be empty\",\n        \"city must be a string\",\n        \"address should not be empty\",\n        \"address must be a string\"\n    ],\n    \"error\": \"Bad Request\",\n    \"statusCode\": 400\n}"
				}
			]
		},
		{
			"name": "Delete a store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/{{store_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{store_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a store",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/{{store_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{store_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:06:24 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete an invalid store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The store with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete an invalid store",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "74"
						},
						{
							"key": "ETag",
							"value": "W/\"4a-iQTKaPdZ40YdwkVyKYlmEufUk5M\""
						},
						{
							"key": "Date",
							"value": "Thu, 09 Nov 2023 13:06:39 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The store with the given id was not found\"\n}"
				}
			]
		}
	]
}